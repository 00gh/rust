// MIR for `a` after Inline

fn a(_1: &mut [T]) -> &mut [T] {
    debug x => _1;                       // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:2:13: 2:14
    let mut _0: &mut [T];                // return place in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:2:29: 2:37
    let mut _2: &mut [T];                // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
    let mut _3: &mut [T];                // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
    let mut _4: &mut [T];                // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
    let mut _5: &mut [T];                // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
    let mut _6: &mut [T];                // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
    scope 1 (inlined <[T] as AsMut<[T]>>::as_mut) { // at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        debug self => _4;                // in scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        let mut _7: &mut [T];            // in scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        let mut _8: &mut [T];            // in scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        let mut _9: &mut [T];            // in scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        StorageLive(_3);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        StorageLive(_4);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        _4 = &mut (*_1);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        StorageLive(_7);                 // scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        StorageLive(_8);                 // scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        _8 = move _4;                    // scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        _7 = &mut (*_8);                 // scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        StorageLive(_9);                 // scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        _9 = move _7;                    // scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        _3 = &mut (*_9);                 // scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        StorageDead(_7);                 // scope 1 at $SRC_DIR/core/src/convert/mod.rs:LL:COL
        StorageLive(_5);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        _5 = move _3;                    // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        _2 = &mut (*_5);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        StorageDead(_4);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:14: 3:15
        StorageLive(_6);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        _6 = move _2;                    // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        _0 = &mut (*_6);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15
        StorageDead(_3);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:4:1: 4:2
        StorageDead(_2);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:4:1: 4:2
        return;                          // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:4:2: 4:2
    }
}
