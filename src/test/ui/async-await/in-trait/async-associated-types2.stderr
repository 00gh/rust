error[E0261]: use of undeclared lifetime name `'a`
  --> $DIR/async-associated-types2.rs:13:32
   |
LL |     fn foo(&self) -> Self::Fut<'a>;
   |                                ^^ undeclared lifetime
   |
help: consider introducing lifetime `'a` here
   |
LL |     fn foo<'a>(&self) -> Self::Fut<'a>;
   |           ++++
help: consider introducing lifetime `'a` here
   |
LL | trait MyTrait<'a> {
   |              ++++

error[E0658]: `impl Trait` in type aliases is unstable
  --> $DIR/async-associated-types2.rs:18:20
   |
LL |     type Fut<'a> = impl Future + 'a
   |                    ^^^^^^^^^^^^^^^^
   |
   = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information
   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable

error[E0271]: expected `<i32 as MyTrait>::Fut<'a>` to be a future that resolves to `i32`, but it resolves to `<<i32 as MyTrait>::Fut<'a> as Future>::Output`
  --> $DIR/async-associated-types2.rs:18:20
   |
LL |     type Fut<'a> = impl Future + 'a
   |                    ^^^^^^^^^^^^^^^^ expected `i32`, found associated type
   |
   = note:         expected type `i32`
           found associated type `<<i32 as MyTrait>::Fut<'a> as Future>::Output`
note: required by a bound in `MyTrait::Fut`
  --> $DIR/async-associated-types2.rs:9:26
   |
LL |     type Fut<'a>: Future<Output = i32>
   |                          ^^^^^^^^^^^^ required by this bound in `MyTrait::Fut`
help: consider constraining the associated type `<<i32 as MyTrait>::Fut<'a> as Future>::Output` to `i32`
   |
LL |     type Fut<'a> = impl Future<Output = i32> + 'a
   |                               ++++++++++++++

error: `impl` item signature doesn't match `trait` item signature
  --> $DIR/async-associated-types2.rs:24:5
   |
LL |     fn foo(&self) -> Self::Fut<'a>;
   |     ------------------------------- expected `fn(&'1 i32) -> <i32 as MyTrait>::Fut<'static>`
...
LL |     fn foo<'a>(&'a self) -> Self::Fut<'a> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&'1 i32) -> <i32 as MyTrait>::Fut<'1>`
   |
   = note: expected `fn(&'1 i32) -> <i32 as MyTrait>::Fut<'static>`
              found `fn(&'1 i32) -> <i32 as MyTrait>::Fut<'1>`
help: the lifetime requirements from the `impl` do not correspond to the requirements in the `trait`
  --> $DIR/async-associated-types2.rs:13:22
   |
LL |     fn foo(&self) -> Self::Fut<'a>;
   |                      ^^^^ consider borrowing this type parameter in the trait

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0261, E0271, E0658.
For more information about an error, try `rustc --explain E0261`.
