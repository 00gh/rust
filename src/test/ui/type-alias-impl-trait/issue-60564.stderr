error[E0271]: type mismatch resolving `<[closure@$DIR/issue-60564.rs:20:28: 20:100] as FnOnce<(u8,)>>::Output == I`
  --> $DIR/issue-60564.rs:20:9
   |
LL | type IterBitsIter<T, E, I> = impl std::iter::Iterator<Item = I>;
   |                         - this type parameter
...
LL |         (0u8..n).rev().map(move |shift| ((self >> T::from(shift)) & T::from(1)).try_into().unwrap())
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u8`, found type parameter `I`
   |
   = note:        expected type `u8`
           found type parameter `I`
   = note: required because of the requirements on the impl of `Iterator` for `Map<Rev<std::ops::Range<u8>>, [closure@$DIR/issue-60564.rs:20:28: 20:100]>`

error[E0271]: type mismatch resolving `<T as TryInto<u8>>::Error == E`
  --> $DIR/issue-60564.rs:20:9
   |
LL | type IterBitsIter<T, E, I> = impl std::iter::Iterator<Item = I>;
   |                      - this type parameter
...
LL |         (0u8..n).rev().map(move |shift| ((self >> T::from(shift)) & T::from(1)).try_into().unwrap())
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected type parameter `E`, found enum `Infallible`
   |
   = note: expected type parameter `E`
                        found enum `Infallible`
note: required by a bound in `<T as IterBits>`
  --> $DIR/issue-60564.rs:15:37
   |
LL |         + std::convert::TryInto<u8, Error = E>,
   |                                     ^^^^^^^^^ required by this bound in `<T as IterBits>`

error[E0277]: no implementation for `T >> T`
  --> $DIR/issue-60564.rs:20:9
   |
LL |         (0u8..n).rev().map(move |shift| ((self >> T::from(shift)) & T::from(1)).try_into().unwrap())
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no implementation for `T >> T`
   |
note: required by a bound in `<T as IterBits>`
  --> $DIR/issue-60564.rs:12:8
   |
LL |     T: std::ops::Shr<Output = T>
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `<T as IterBits>`
help: consider restricting type parameter `T`
   |
LL | type IterBitsIter<T: std::ops::Shr, E, I> = impl std::iter::Iterator<Item = I>;
   |                    +++++++++++++++

error[E0277]: no implementation for `T & T`
  --> $DIR/issue-60564.rs:20:9
   |
LL |         (0u8..n).rev().map(move |shift| ((self >> T::from(shift)) & T::from(1)).try_into().unwrap())
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no implementation for `T & T`
   |
note: required by a bound in `<T as IterBits>`
  --> $DIR/issue-60564.rs:13:11
   |
LL |         + std::ops::BitAnd<T, Output = T>
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `<T as IterBits>`
help: consider restricting type parameter `T`
   |
LL | type IterBitsIter<T: std::ops::BitAnd, E, I> = impl std::iter::Iterator<Item = I>;
   |                    ++++++++++++++++++

error[E0277]: the trait bound `T: From<u8>` is not satisfied
  --> $DIR/issue-60564.rs:20:9
   |
LL |         (0u8..n).rev().map(move |shift| ((self >> T::from(shift)) & T::from(1)).try_into().unwrap())
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<u8>` is not implemented for `T`
   |
note: required by a bound in `<T as IterBits>`
  --> $DIR/issue-60564.rs:14:11
   |
LL |         + std::convert::From<u8>
   |           ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `<T as IterBits>`
help: consider restricting type parameter `T`
   |
LL | type IterBitsIter<T: std::convert::From<u8>, E, I> = impl std::iter::Iterator<Item = I>;
   |                    ++++++++++++++++++++++++

error[E0277]: the trait bound `T: Copy` is not satisfied
  --> $DIR/issue-60564.rs:20:9
   |
LL |         (0u8..n).rev().map(move |shift| ((self >> T::from(shift)) & T::from(1)).try_into().unwrap())
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `T`
   |
note: required by a bound in `<T as IterBits>`
  --> $DIR/issue-60564.rs:10:9
   |
LL | impl<T: Copy, E> IterBits for T
   |         ^^^^ required by this bound in `<T as IterBits>`
help: consider restricting type parameter `T`
   |
LL | type IterBitsIter<T: std::marker::Copy, E, I> = impl std::iter::Iterator<Item = I>;
   |                    +++++++++++++++++++

error[E0277]: `E` doesn't implement `Debug`
  --> $DIR/issue-60564.rs:20:9
   |
LL |         (0u8..n).rev().map(move |shift| ((self >> T::from(shift)) & T::from(1)).try_into().unwrap())
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `E` cannot be formatted using `{:?}` because it doesn't implement `Debug`
   |
note: required by a bound in `<T as IterBits>`
  --> $DIR/issue-60564.rs:16:8
   |
LL |     E: std::fmt::Debug,
   |        ^^^^^^^^^^^^^^^ required by this bound in `<T as IterBits>`
help: consider restricting type parameter `E`
   |
LL | type IterBitsIter<T, E: std::fmt::Debug, I> = impl std::iter::Iterator<Item = I>;
   |                       +++++++++++++++++

error[E0277]: the trait bound `u8: From<T>` is not satisfied
  --> $DIR/issue-60564.rs:20:9
   |
LL |         (0u8..n).rev().map(move |shift| ((self >> T::from(shift)) & T::from(1)).try_into().unwrap())
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<T>` is not implemented for `u8`
   |
   = note: required because of the requirements on the impl of `Into<u8>` for `T`
   = note: required because of the requirements on the impl of `TryFrom<T>` for `u8`
   = note: required because of the requirements on the impl of `TryInto<u8>` for `T`
note: required by a bound in `<T as IterBits>`
  --> $DIR/issue-60564.rs:15:11
   |
LL |         + std::convert::TryInto<u8, Error = E>,
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `<T as IterBits>`
help: consider introducing a `where` bound, but there might be an alternative better way to express this requirement
   |
LL | type IterBitsIter<T, E, I> = impl std::iter::Iterator<Item = I> where u8: From<T>;
   |                                                                 +++++++++++++++++

error: non-defining opaque type use in defining scope
  --> $DIR/issue-60564.rs:20:9
   |
LL |         (0u8..n).rev().map(move |shift| ((self >> T::from(shift)) & T::from(1)).try_into().unwrap())
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: used non-generic type `u8` for generic parameter
  --> $DIR/issue-60564.rs:8:25
   |
LL | type IterBitsIter<T, E, I> = impl std::iter::Iterator<Item = I>;
   |                         ^

error: aborting due to 9 previous errors

Some errors have detailed explanations: E0271, E0277.
For more information about an error, try `rustc --explain E0271`.
