{
    0: CrateData {
        root_file_id: FileId(
            1,
        ),
        edition: Edition2018,
        version: Some(
            "0.7.20",
        ),
        display_name: Some(
            CrateDisplayName {
                crate_name: CrateName(
                    "aho_corasick",
                ),
                canonical_name: "aho_corasick",
            },
        ),
        cfg_options: CfgOptions(
            [
                "debug_assertions",
                "feature=default",
                "feature=std",
            ],
        ),
        potential_cfg_options: Some(
            CfgOptions(
                [
                    "debug_assertions",
                    "feature=default",
                    "feature=std",
                ],
            ),
        ),
        env: Env {
            entries: {
                "CARGO_PKG_LICENSE": "",
                "CARGO_PKG_VERSION_MAJOR": "0",
                "CARGO_MANIFEST_DIR": "$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20",
                "CARGO_PKG_VERSION": "0.7.20",
                "CARGO_PKG_AUTHORS": "",
                "CARGO_CRATE_NAME": "aho_corasick",
                "CARGO_PKG_LICENSE_FILE": "",
                "CARGO_PKG_HOMEPAGE": "",
                "CARGO_PKG_DESCRIPTION": "",
                "CARGO_PKG_NAME": "aho-corasick",
                "CARGO_PKG_VERSION_PATCH": "20",
                "CARGO": "cargo",
                "CARGO_PKG_REPOSITORY": "",
                "CARGO_PKG_VERSION_MINOR": "7",
                "CARGO_PKG_VERSION_PRE": "",
            },
        },
        dependencies: [
            Dependency {
                crate_id: Idx::<CrateData>(2),
                name: CrateName(
                    "memchr",
                ),
                prelude: true,
            },
        ],
        origin: Library {
            repo: Some(
                "https://github.com/BurntSushi/aho-corasick",
            ),
            name: "aho-corasick",
        },
        is_proc_macro: false,
        target_layout: Err(
            "target_data_layout not loaded",
        ),
        channel: None,
    },
    1: CrateData {
        root_file_id: FileId(
            2,
        ),
        edition: Edition2021,
        version: Some(
            "0.3.0",
        ),
        display_name: Some(
            CrateDisplayName {
                crate_name: CrateName(
                    "la_arena",
                ),
                canonical_name: "la-arena",
            },
        ),
        cfg_options: CfgOptions(
            [
                "debug_assertions",
            ],
        ),
        potential_cfg_options: None,
        env: Env {
            entries: {
                "CARGO_PKG_LICENSE": "",
                "CARGO_PKG_VERSION_MAJOR": "0",
                "CARGO_MANIFEST_DIR": "$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/la-arena-0.3.0",
                "CARGO_PKG_VERSION": "0.3.0",
                "CARGO_PKG_AUTHORS": "",
                "CARGO_CRATE_NAME": "la_arena",
                "CARGO_PKG_LICENSE_FILE": "",
                "CARGO_PKG_HOMEPAGE": "",
                "CARGO_PKG_DESCRIPTION": "",
                "CARGO_PKG_NAME": "la-arena",
                "CARGO_PKG_VERSION_PATCH": "0",
                "CARGO": "cargo",
                "CARGO_PKG_REPOSITORY": "",
                "CARGO_PKG_VERSION_MINOR": "3",
                "CARGO_PKG_VERSION_PRE": "",
            },
        },
        dependencies: [],
        origin: Library {
            repo: Some(
                "https://github.com/rust-lang/rust-analyzer/tree/master/lib/la-arena",
            ),
            name: "la-arena",
        },
        is_proc_macro: false,
        target_layout: Err(
            "target_data_layout not loaded",
        ),
        channel: None,
    },
    2: CrateData {
        root_file_id: FileId(
            3,
        ),
        edition: Edition2018,
        version: Some(
            "2.5.0",
        ),
        display_name: Some(
            CrateDisplayName {
                crate_name: CrateName(
                    "memchr",
                ),
                canonical_name: "memchr",
            },
        ),
        cfg_options: CfgOptions(
            [
                "debug_assertions",
                "feature=default",
                "feature=std",
            ],
        ),
        potential_cfg_options: Some(
            CfgOptions(
                [
                    "debug_assertions",
                    "feature=compiler_builtins",
                    "feature=core",
                    "feature=default",
                    "feature=libc",
                    "feature=rustc-dep-of-std",
                    "feature=std",
                    "feature=use_std",
                ],
            ),
        ),
        env: Env {
            entries: {
                "CARGO_PKG_LICENSE": "",
                "CARGO_PKG_VERSION_MAJOR": "2",
                "CARGO_MANIFEST_DIR": "$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0",
                "CARGO_PKG_VERSION": "2.5.0",
                "CARGO_PKG_AUTHORS": "",
                "CARGO_CRATE_NAME": "memchr",
                "CARGO_PKG_LICENSE_FILE": "",
                "CARGO_PKG_HOMEPAGE": "",
                "CARGO_PKG_DESCRIPTION": "",
                "CARGO_PKG_NAME": "memchr",
                "CARGO_PKG_VERSION_PATCH": "0",
                "CARGO": "cargo",
                "CARGO_PKG_REPOSITORY": "",
                "CARGO_PKG_VERSION_MINOR": "5",
                "CARGO_PKG_VERSION_PRE": "",
            },
        },
        dependencies: [],
        origin: Library {
            repo: Some(
                "https://github.com/BurntSushi/memchr",
            ),
            name: "memchr",
        },
        is_proc_macro: false,
        target_layout: Err(
            "target_data_layout not loaded",
        ),
        channel: None,
    },
    3: CrateData {
        root_file_id: FileId(
            4,
        ),
        edition: Edition2021,
        version: Some(
            "0.1.0",
        ),
        display_name: Some(
            CrateDisplayName {
                crate_name: CrateName(
                    "ra_playground",
                ),
                canonical_name: "ra-playground",
            },
        ),
        cfg_options: CfgOptions(
            [
                "debug_assertions",
            ],
        ),
        potential_cfg_options: None,
        env: Env {
            entries: {
                "CARGO_PKG_LICENSE": "",
                "CARGO_PKG_VERSION_MAJOR": "0",
                "CARGO_MANIFEST_DIR": "$ROOT$ra-playground",
                "CARGO_PKG_VERSION": "0.1.0",
                "CARGO_PKG_AUTHORS": "",
                "CARGO_CRATE_NAME": "ra_playground",
                "CARGO_PKG_LICENSE_FILE": "",
                "CARGO_PKG_HOMEPAGE": "",
                "CARGO_PKG_DESCRIPTION": "",
                "CARGO_PKG_NAME": "ra-playground",
                "CARGO_PKG_VERSION_PATCH": "0",
                "CARGO": "cargo",
                "CARGO_PKG_REPOSITORY": "",
                "CARGO_PKG_VERSION_MINOR": "1",
                "CARGO_PKG_VERSION_PRE": "",
            },
        },
        dependencies: [
            Dependency {
                crate_id: Idx::<CrateData>(1),
                name: CrateName(
                    "la_arena",
                ),
                prelude: true,
            },
            Dependency {
                crate_id: Idx::<CrateData>(8),
                name: CrateName(
                    "ra_playground",
                ),
                prelude: true,
            },
            Dependency {
                crate_id: Idx::<CrateData>(7),
                name: CrateName(
                    "regex",
                ),
                prelude: true,
            },
        ],
        origin: Local {
            repo: None,
            name: Some(
                "ra-playground",
            ),
        },
        is_proc_macro: false,
        target_layout: Err(
            "target_data_layout not loaded",
        ),
        channel: None,
    },
    4: CrateData {
        root_file_id: FileId(
            5,
        ),
        edition: Edition2021,
        version: Some(
            "0.1.0",
        ),
        display_name: Some(
            CrateDisplayName {
                crate_name: CrateName(
                    "ra_playground",
                ),
                canonical_name: "ra-playground",
            },
        ),
        cfg_options: CfgOptions(
            [
                "debug_assertions",
                "test",
            ],
        ),
        potential_cfg_options: None,
        env: Env {
            entries: {
                "CARGO_PKG_LICENSE": "",
                "CARGO_PKG_VERSION_MAJOR": "0",
                "CARGO_MANIFEST_DIR": "$ROOT$ra-playground",
                "CARGO_PKG_VERSION": "0.1.0",
                "CARGO_PKG_AUTHORS": "",
                "CARGO_CRATE_NAME": "ra_playground",
                "CARGO_PKG_LICENSE_FILE": "",
                "CARGO_PKG_HOMEPAGE": "",
                "CARGO_PKG_DESCRIPTION": "",
                "CARGO_PKG_NAME": "ra-playground",
                "CARGO_PKG_VERSION_PATCH": "0",
                "CARGO": "cargo",
                "CARGO_PKG_REPOSITORY": "",
                "CARGO_PKG_VERSION_MINOR": "1",
                "CARGO_PKG_VERSION_PRE": "",
            },
        },
        dependencies: [
            Dependency {
                crate_id: Idx::<CrateData>(3),
                name: CrateName(
                    "ra_playground",
                ),
                prelude: true,
            },
            Dependency {
                crate_id: Idx::<CrateData>(1),
                name: CrateName(
                    "la_arena",
                ),
                prelude: true,
            },
            Dependency {
                crate_id: Idx::<CrateData>(8),
                name: CrateName(
                    "ra_playground",
                ),
                prelude: true,
            },
            Dependency {
                crate_id: Idx::<CrateData>(7),
                name: CrateName(
                    "regex",
                ),
                prelude: true,
            },
        ],
        origin: Local {
            repo: None,
            name: Some(
                "ra-playground",
            ),
        },
        is_proc_macro: false,
        target_layout: Err(
            "target_data_layout not loaded",
        ),
        channel: None,
    },
    5: CrateData {
        root_file_id: FileId(
            6,
        ),
        edition: Edition2018,
        version: Some(
            "1.7.3",
        ),
        display_name: Some(
            CrateDisplayName {
                crate_name: CrateName(
                    "regex",
                ),
                canonical_name: "regex",
            },
        ),
        cfg_options: CfgOptions(
            [
                "debug_assertions",
                "feature=aho-corasick",
                "feature=default",
                "feature=memchr",
                "feature=perf",
                "feature=perf-cache",
                "feature=perf-dfa",
                "feature=perf-inline",
                "feature=perf-literal",
                "feature=std",
                "feature=unicode",
                "feature=unicode-age",
                "feature=unicode-bool",
                "feature=unicode-case",
                "feature=unicode-gencat",
                "feature=unicode-perl",
                "feature=unicode-script",
                "feature=unicode-segment",
            ],
        ),
        potential_cfg_options: Some(
            CfgOptions(
                [
                    "debug_assertions",
                    "feature=aho-corasick",
                    "feature=default",
                    "feature=memchr",
                    "feature=pattern",
                    "feature=perf",
                    "feature=perf-cache",
                    "feature=perf-dfa",
                    "feature=perf-inline",
                    "feature=perf-literal",
                    "feature=std",
                    "feature=unicode",
                    "feature=unicode-age",
                    "feature=unicode-bool",
                    "feature=unicode-case",
                    "feature=unicode-gencat",
                    "feature=unicode-perl",
                    "feature=unicode-script",
                    "feature=unicode-segment",
                    "feature=unstable",
                    "feature=use_std",
                ],
            ),
        ),
        env: Env {
            entries: {
                "CARGO_PKG_LICENSE": "",
                "CARGO_PKG_VERSION_MAJOR": "1",
                "CARGO_MANIFEST_DIR": "$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.3",
                "CARGO_PKG_VERSION": "1.7.3",
                "CARGO_PKG_AUTHORS": "",
                "CARGO_CRATE_NAME": "regex",
                "CARGO_PKG_LICENSE_FILE": "",
                "CARGO_PKG_HOMEPAGE": "",
                "CARGO_PKG_DESCRIPTION": "",
                "CARGO_PKG_NAME": "regex",
                "CARGO_PKG_VERSION_PATCH": "3",
                "CARGO": "cargo",
                "CARGO_PKG_REPOSITORY": "",
                "CARGO_PKG_VERSION_MINOR": "7",
                "CARGO_PKG_VERSION_PRE": "",
            },
        },
        dependencies: [
            Dependency {
                crate_id: Idx::<CrateData>(0),
                name: CrateName(
                    "aho_corasick",
                ),
                prelude: true,
            },
            Dependency {
                crate_id: Idx::<CrateData>(2),
                name: CrateName(
                    "memchr",
                ),
                prelude: true,
            },
            Dependency {
                crate_id: Idx::<CrateData>(6),
                name: CrateName(
                    "regex_syntax",
                ),
                prelude: true,
            },
        ],
        origin: Library {
            repo: Some(
                "https://github.com/rust-lang/regex",
            ),
            name: "regex",
        },
        is_proc_macro: false,
        target_layout: Err(
            "target_data_layout not loaded",
        ),
        channel: None,
    },
    6: CrateData {
        root_file_id: FileId(
            7,
        ),
        edition: Edition2018,
        version: Some(
            "0.6.29",
        ),
        display_name: Some(
            CrateDisplayName {
                crate_name: CrateName(
                    "regex_syntax",
                ),
                canonical_name: "regex-syntax",
            },
        ),
        cfg_options: CfgOptions(
            [
                "debug_assertions",
                "feature=default",
                "feature=unicode",
                "feature=unicode-age",
                "feature=unicode-bool",
                "feature=unicode-case",
                "feature=unicode-gencat",
                "feature=unicode-perl",
                "feature=unicode-script",
                "feature=unicode-segment",
            ],
        ),
        potential_cfg_options: Some(
            CfgOptions(
                [
                    "debug_assertions",
                    "feature=default",
                    "feature=unicode",
                    "feature=unicode-age",
                    "feature=unicode-bool",
                    "feature=unicode-case",
                    "feature=unicode-gencat",
                    "feature=unicode-perl",
                    "feature=unicode-script",
                    "feature=unicode-segment",
                ],
            ),
        ),
        env: Env {
            entries: {
                "CARGO_PKG_LICENSE": "",
                "CARGO_PKG_VERSION_MAJOR": "0",
                "CARGO_MANIFEST_DIR": "$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.29",
                "CARGO_PKG_VERSION": "0.6.29",
                "CARGO_PKG_AUTHORS": "",
                "CARGO_CRATE_NAME": "regex_syntax",
                "CARGO_PKG_LICENSE_FILE": "",
                "CARGO_PKG_HOMEPAGE": "",
                "CARGO_PKG_DESCRIPTION": "",
                "CARGO_PKG_NAME": "regex-syntax",
                "CARGO_PKG_VERSION_PATCH": "29",
                "CARGO": "cargo",
                "CARGO_PKG_REPOSITORY": "",
                "CARGO_PKG_VERSION_MINOR": "6",
                "CARGO_PKG_VERSION_PRE": "",
            },
        },
        dependencies: [],
        origin: Library {
            repo: Some(
                "https://github.com/rust-lang/regex",
            ),
            name: "regex-syntax",
        },
        is_proc_macro: false,
        target_layout: Err(
            "target_data_layout not loaded",
        ),
        channel: None,
    },
    7: CrateData {
        root_file_id: FileId(
            6,
        ),
        edition: Edition2018,
        version: Some(
            "1.7.3",
        ),
        display_name: Some(
            CrateDisplayName {
                crate_name: CrateName(
                    "regex",
                ),
                canonical_name: "regex",
            },
        ),
        cfg_options: CfgOptions(
            [
                "debug_assertions",
                "feature=aho-corasick",
                "feature=default",
                "feature=memchr",
                "feature=perf",
                "feature=perf-cache",
                "feature=perf-dfa",
                "feature=perf-inline",
                "feature=perf-literal",
                "feature=std",
                "feature=unicode",
                "feature=unicode-age",
                "feature=unicode-bool",
                "feature=unicode-case",
                "feature=unicode-gencat",
                "feature=unicode-perl",
                "feature=unicode-script",
                "feature=unicode-segment",
                "test",
            ],
        ),
        potential_cfg_options: Some(
            CfgOptions(
                [
                    "debug_assertions",
                    "feature=aho-corasick",
                    "feature=default",
                    "feature=memchr",
                    "feature=pattern",
                    "feature=perf",
                    "feature=perf-cache",
                    "feature=perf-dfa",
                    "feature=perf-inline",
                    "feature=perf-literal",
                    "feature=std",
                    "feature=unicode",
                    "feature=unicode-age",
                    "feature=unicode-bool",
                    "feature=unicode-case",
                    "feature=unicode-gencat",
                    "feature=unicode-perl",
                    "feature=unicode-script",
                    "feature=unicode-segment",
                    "feature=unstable",
                    "feature=use_std",
                ],
            ),
        ),
        env: Env {
            entries: {
                "CARGO_PKG_LICENSE": "",
                "CARGO_PKG_VERSION_MAJOR": "1",
                "CARGO_MANIFEST_DIR": "$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.3",
                "CARGO_PKG_VERSION": "1.7.3",
                "CARGO_PKG_AUTHORS": "",
                "CARGO_CRATE_NAME": "regex",
                "CARGO_PKG_LICENSE_FILE": "",
                "CARGO_PKG_HOMEPAGE": "",
                "CARGO_PKG_DESCRIPTION": "",
                "CARGO_PKG_NAME": "regex",
                "CARGO_PKG_VERSION_PATCH": "3",
                "CARGO": "cargo",
                "CARGO_PKG_REPOSITORY": "",
                "CARGO_PKG_VERSION_MINOR": "7",
                "CARGO_PKG_VERSION_PRE": "",
            },
        },
        dependencies: [],
        origin: Library {
            repo: Some(
                "https://github.com/rust-lang/regex",
            ),
            name: "regex",
        },
        is_proc_macro: false,
        target_layout: Err(
            "target_data_layout not loaded",
        ),
        channel: None,
    },
    8: CrateData {
        root_file_id: FileId(
            4,
        ),
        edition: Edition2021,
        version: Some(
            "0.1.0",
        ),
        display_name: Some(
            CrateDisplayName {
                crate_name: CrateName(
                    "ra_playground",
                ),
                canonical_name: "ra-playground",
            },
        ),
        cfg_options: CfgOptions(
            [
                "debug_assertions",
                "test",
            ],
        ),
        potential_cfg_options: None,
        env: Env {
            entries: {
                "CARGO_PKG_LICENSE": "",
                "CARGO_PKG_VERSION_MAJOR": "0",
                "CARGO_MANIFEST_DIR": "$ROOT$ra-playground",
                "CARGO_PKG_VERSION": "0.1.0",
                "CARGO_PKG_AUTHORS": "",
                "CARGO_CRATE_NAME": "ra_playground",
                "CARGO_PKG_LICENSE_FILE": "",
                "CARGO_PKG_HOMEPAGE": "",
                "CARGO_PKG_DESCRIPTION": "",
                "CARGO_PKG_NAME": "ra-playground",
                "CARGO_PKG_VERSION_PATCH": "0",
                "CARGO": "cargo",
                "CARGO_PKG_REPOSITORY": "",
                "CARGO_PKG_VERSION_MINOR": "1",
                "CARGO_PKG_VERSION_PRE": "",
            },
        },
        dependencies: [],
        origin: Local {
            repo: None,
            name: Some(
                "ra-playground",
            ),
        },
        is_proc_macro: false,
        target_layout: Err(
            "target_data_layout not loaded",
        ),
        channel: None,
    },
}