- // MIR for `variant_a::{closure#0}` before DestinationPropagation
+ // MIR for `variant_a::{closure#0}` after DestinationPropagation
  
  fn variant_a::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:8:25: 8:39], _2: &&(usize, usize, usize, usize)) -> bool {
      let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:40: +0:40
      let _3: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:27: +0:28
      let _4: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:30: +0:31
      let _5: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:33: +0:34
      let _6: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:36: +0:37
      let mut _7: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:56
      let mut _8: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:46
      let _9: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46
      let mut _10: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:56
      let _11: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56
      let mut _12: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:76
      let mut _13: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:66
      let _14: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66
      let mut _15: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:76
      let _16: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
      let mut _17: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38
      let mut _18: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38
      let mut _19: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38
      let mut _20: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38
      scope 1 {
-         debug a => _3;                   // in scope 1 at $DIR/slice_filter.rs:+0:27: +0:28
-         debug b => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:30: +0:31
-         debug c => _5;                   // in scope 1 at $DIR/slice_filter.rs:+0:33: +0:34
-         debug d => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:36: +0:37
+         debug a => _14;                  // in scope 1 at $DIR/slice_filter.rs:+0:27: +0:28
+         debug b => _11;                  // in scope 1 at $DIR/slice_filter.rs:+0:30: +0:31
+         debug c => _9;                   // in scope 1 at $DIR/slice_filter.rs:+0:33: +0:34
+         debug d => _16;                  // in scope 1 at $DIR/slice_filter.rs:+0:36: +0:37
          scope 2 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:40: 8:46
-             debug self => &_3;           // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
+             debug self => &_14;          // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
              debug other => &_9;          // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _21: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _22: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
              scope 3 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug self => _21;       // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug other => _22;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _23: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _24: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
              }
          }
          scope 4 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:60: 8:66
-             debug self => &_5;           // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
+             debug self => &_9;           // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
              debug other => &_14;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _25: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _26: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
              scope 5 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug self => _25;       // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug other => _26;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _27: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _28: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
              }
          }
          scope 6 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:50: 8:56
-             debug self => &_6;           // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
+             debug self => &_16;          // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
              debug other => &_11;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _29: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _30: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
              scope 7 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug self => _29;       // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug other => _30;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _31: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _32: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
              }
          }
          scope 8 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:70: 8:76
-             debug self => &_4;           // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
+             debug self => &_11;          // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
              debug other => &_16;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _33: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _34: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
              scope 9 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug self => _33;       // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug other => _34;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _35: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _36: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
              }
          }
      }
  
      bb0: {
-         StorageLive(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28
+         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28
          _17 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28
-         _3 = &((*_17).0: usize);         // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28
-         StorageLive(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31
+         _14 = &((*_17).0: usize);        // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28
+         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31
          _18 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31
-         _4 = &((*_18).1: usize);         // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31
-         StorageLive(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34
+         _11 = &((*_18).1: usize);        // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31
+         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34
          _19 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34
-         _5 = &((*_19).2: usize);         // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34
-         StorageLive(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37
+         _9 = &((*_19).2: usize);         // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34
+         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37
          _20 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37
-         _6 = &((*_20).3: usize);         // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37
-         StorageLive(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
+         _16 = &((*_20).3: usize);        // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
          StorageLive(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:46
-         StorageLive(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
-         _9 = _5;                         // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
-         _21 = deref_copy _3;             // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
+         _21 = deref_copy _14;            // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _22 = deref_copy _9;             // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_23);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _23 = (*_21);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_24);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _24 = (*_22);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _8 = Le(move _23, move _24);     // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_24);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_23);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
-         StorageDead(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
          switchInt(move _8) -> [0: bb4, otherwise: bb5]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
      }
  
      bb1: {
          _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
      }
  
      bb2: {
-         StorageLive(_12);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
          StorageLive(_13);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:66
-         StorageLive(_14);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
-         _14 = _3;                        // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
-         _25 = deref_copy _5;             // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
+         _25 = deref_copy _9;             // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _26 = deref_copy _14;            // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_27);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _27 = (*_25);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_28);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _28 = (*_26);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _13 = Le(move _27, move _28);    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_28);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_27);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
-         StorageDead(_14);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
          switchInt(move _13) -> [0: bb6, otherwise: bb7]; // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
      }
  
      bb3: {
-         StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
-         StorageDead(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
-         StorageDead(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
-         StorageDead(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
-         StorageDead(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
-         StorageDead(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
          return;                          // scope 0 at $DIR/slice_filter.rs:+0:76: +0:76
      }
  
      bb4: {
-         StorageDead(_10);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          goto -> bb2;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
      }
  
      bb5: {
-         StorageLive(_10);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56
-         StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
-         _11 = _4;                        // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
-         _29 = deref_copy _6;             // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
+         _29 = deref_copy _16;            // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _30 = deref_copy _11;            // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_31);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _31 = (*_29);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_32);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _32 = (*_30);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _10 = Le(move _31, move _32);    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_32);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_31);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
-         StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
-         _7 = move _10;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
-         StorageDead(_10);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
-         switchInt(move _7) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
+         switchInt(move _10) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
      }
  
      bb6: {
-         _12 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
+         _0 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
      }
  
      bb7: {
-         StorageLive(_15);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76
-         StorageLive(_16);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
-         _16 = _6;                        // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
-         _33 = deref_copy _4;             // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
+         _33 = deref_copy _11;            // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _34 = deref_copy _16;            // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_35);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _35 = (*_33);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_36);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _36 = (*_34);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
-         _15 = Le(move _35, move _36);    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
+         _0 = Le(move _35, move _36);     // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_36);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_35);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
-         StorageDead(_16);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
-         _12 = move _15;                  // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
      }
  
      bb8: {
-         StorageDead(_15);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
          StorageDead(_13);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
-         _0 = move _12;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
      }
  }
  
