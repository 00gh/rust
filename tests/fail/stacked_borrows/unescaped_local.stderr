warning: pointer-to-integer cast
  --> $DIR/unescaped_local.rs:LL:CC
   |
LL |     let raw = &mut x as *mut i32 as usize as *mut i32;
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pointer-to-integer cast
   |
   = help: this program is using integer-to-pointer casts or (equivalently) `from_exposed_addr`,
   = help: which means that Miri might miss pointer bugs in this program
   = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.from_exposed_addr.html for more details on that operation
   = help: to ensure that Miri does not miss bugs in your program, use `with_addr` (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance) instead
   = help: you can then pass the `-Zmiri-strict-provenance` flag to Miri, to ensure you are not relying on `from_exposed_addr` semantics
   = help: alternatively, the `-Zmiri-permissive-provenance` flag disables this warning
           
   = note: inside `main` at $DIR/unescaped_local.rs:LL:CC

error: Undefined Behavior: attempting a write access using <wildcard> at ALLOC[0x0], but no exposed tags have suitable permission in the borrow stack for this location
  --> $DIR/unescaped_local.rs:LL:CC
   |
LL |         *raw = 13;
   |         ^^^^^^^^^
   |         |
   |         attempting a write access using <wildcard> at ALLOC[0x0], but no exposed tags have suitable permission in the borrow stack for this location
   |         this error occurs as part of an access at ALLOC[0x0..0x4]
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental
   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information
           
   = note: inside `main` at $DIR/unescaped_local.rs:LL:CC

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to previous error; 1 warning emitted

