error[E0038]: the trait `Foo` cannot be made into an object
  --> $DIR/object-safety.rs:17:33
   |
LL |     let i = Box::new(42_u32) as Box<dyn Foo>;
   |                                 ^^^^^^^^^^^^ `Foo` cannot be made into an object
   |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/object-safety.rs:7:22
   |
LL | trait Foo {
   |       --- this trait cannot be made into an object...
LL |     fn baz(&self) -> impl Debug;
   |                      ^^^^^^^^^^ ...because method `baz` references an `impl Trait` type in its return type
   = help: consider moving `baz` to another trait

error[E0277]: the trait bound `dyn Foo: Foo` is not satisfied
  --> $DIR/object-safety.rs:20:15
   |
LL |     let s = i.baz();
   |               ^^^ the trait `Foo` is not implemented for `dyn Foo`
   |
   = help: the trait `Foo` is implemented for `u32`

error[E0038]: the trait `Foo` cannot be made into an object
  --> $DIR/object-safety.rs:20:13
   |
LL |     let s = i.baz();
   |             ^^^^^^^ `Foo` cannot be made into an object
   |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/object-safety.rs:7:22
   |
LL | trait Foo {
   |       --- this trait cannot be made into an object...
LL |     fn baz(&self) -> impl Debug;
   |                      ^^^^^^^^^^ ...because method `baz` references an `impl Trait` type in its return type
   = help: consider moving `baz` to another trait

error[E0038]: the trait `Foo` cannot be made into an object
  --> $DIR/object-safety.rs:17:13
   |
LL |     let i = Box::new(42_u32) as Box<dyn Foo>;
   |             ^^^^^^^^^^^^^^^^ `Foo` cannot be made into an object
   |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/object-safety.rs:7:22
   |
LL | trait Foo {
   |       --- this trait cannot be made into an object...
LL |     fn baz(&self) -> impl Debug;
   |                      ^^^^^^^^^^ ...because method `baz` references an `impl Trait` type in its return type
   = help: consider moving `baz` to another trait
   = note: required for the cast from `Box<u32>` to `Box<dyn Foo>`

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0038, E0277.
For more information about an error, try `rustc --explain E0038`.
